buildscript {
    repositories {
        mavenLocal()
        maven {
            url 'https://software.smart-trade.net/artifactory/plugins-release'
            credentials {
                username = "${artifactory_user}"
                password = "${artifactory_password}"
            }
        }
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    
    dependencies {
        classpath 'com.smarttrade.builders:stplugin:4.1.0.0'
    }
}

plugins {
  id 'application'
  id 'maven-publish'
  id 'net.researchgate.release' version '2.6.0'
}


release {
    buildTasks = ['boot','test','publish']
    git {
        requireBranch = 'master'
    }
}

mainClassName = "com.smarttrade.retro_converter.Main"
applicationDefaultJvmArgs = ["--add-opens=java.base/java.lang=ALL-UNNAMED","--illegal-access=deny"]
applicationDistribution.from(sourceSets.main.resources.srcDirs) {
    //https://discuss.gradle.org/t/classpath-in-application-plugin-is-building-always-relative-to-app-home-lib-directory/2012
    into "lib/cfg"
}
startScripts {
	classpath = files('cfg') + classpath
}



group = 'com.smarttrade.retro_converter'

ext {
	jacksonVersion = '2.13.2.20220328'
}



apply plugin: 'stplugin'

stplugin {
    deployable = true
    publishJar = true
    baseName = 'lfx'
}

STVersion {
    name = "AXMIG"
    minimalVersionByContainerName= [
    	"DBASE": '4.2.0.0'
    ]
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

configurations {
    all {
        resolutionStrategy {
            cacheChangingModulesFor 0, 'seconds'
        }
    }
}

jar {
    baseName = ''
    appendix = project.name

    manifest {
        //attributes('Main-Class': 'com.smarttrade.retro_converter.Main')
        attributes("Manifest-Version": "1.0")
        attributes("Implementation-Title": project.name)
        attributes("Implementation-Version": version)
        attributes("Built-By": "smarttrade")
        attributes("Date": new Date().toGMTString())
    }
}

dependencies {
	compile 'org.apache.commons:commons-lang3:3.5'
	compile 'com.fasterxml.jackson.core:jackson-databind:2.13.3'
	compile 'com.opencsv:opencsv:5.6'
	compile 'com.github.ramalapure:json-parser:1.1'
	compile 'com.fasterxml.jackson.dataformat:jackson-dataformat-csv:2.13.3'
	compile 'org.apache.cxf:cxf-rt-transports-http:3.5.2'	
	compile 'org.apache.httpcomponents:httpclient:4.5.13'
	compile 'com.atlassian.confluence:confluence-rest-client:7.0.1-m126'
	compile	'com.atlassian.confluence:confluence-java-api:7.0.1-m126'
	
	
	// Logging
	compile 'org.slf4j:slf4j-api:1.7.9'
	compile 'org.slf4j:jul-to-slf4j:1.7.9'
    compile 'org.slf4j:jcl-over-slf4j:1.7.9'
    compile 'org.slf4j:log4j-over-slf4j:1.7.9'
    compile 'org.apache.logging.log4j:log4j-slf4j-impl:2.11.0'
    
    
    
	// Testing
	testCompile 'junit:junit:4.12'
	testCompile 'org.hamcrest:hamcrest-all:1.3'
	testCompile 'org.mockito:mockito-core:2.13.0'
}

jar.finalizedBy sourcesJar
artifacts {
    archives sourcesJar
    archives distZip
}
model {
    publishing {
        	publications {
            	mavenJava(MavenPublication) {
                	artifact tasks.sourcesJar {
                    	classifier = 'sources'
                	}
                	artifact tasks.distZip {
                		classifier = 'dist'
                	}
            	}
        	}
    	}
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.6'
}
